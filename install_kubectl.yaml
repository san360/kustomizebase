apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - traefik.containo.us
  resources:
  - middlewares
  - ingressroutes
  - traefikservices
  - ingressroutetcps
  - ingressrouteudps
  - tlsoptions
  - tlsstores
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: traefik
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  labels:
    app: traefik
  name: traefik-ingress-service
  namespace: traefik
spec:
  loadBalancerIP: 1.2.3.4
  ports:
  - name: http
    port: 80
    protocol: TCP
  - name: dashboard
    port: 8080
    protocol: TCP
  selector:
    app: traefik
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: traefik
  name: traefik-ingress-controller
  namespace: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8082"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      labels:
        app: traefik
        name: traefik-ingress-lb
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - traefik
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --api=true
        - --api.insecure=true
        - --api.dashboard=true
        - --providers.kubernetescrd
        - --log.level=INFO
        - --ping=true
        - --ping.entrypoint=http
        - --entrypoints.http=true
        - --entrypoints.http.address=:80
        - --entrypoints.http.forwardedheaders.insecure=true
        - --metrics.prometheus=true
        - --metrics.prometheus.entryPoint=metrics
        - --entrypoints.metrics=true
        - --entryPoints.metrics.address=:8082
        - --metrics.prometheus.addServicesLabels=true
        - --metrics.prometheus.addEntryPointsLabels=true
        - --entrypoints.http.forwardedheaders.trustedIPs=1.2.3.4
        image: traefik:#{global.aks.traefik.version}#
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: traefik-ingress-lb
        ports:
        - containerPort: 80
          name: http
        - containerPort: 8080
          name: dashboard
        - containerPort: 8082
          name: metrics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
      imagePullSecrets:
      - name: hello
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: traefik-ingress-controller
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: traefik
  name: traefik-ingress-hpa
  namespace: traefik
spec:
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  - resource:
      name: memory
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: traefik-ingress-controller
